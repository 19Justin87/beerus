name: ci
on:
  workflow_dispatch:
  schedule:
    - cron: "0 8 * * *"

jobs:
  integration:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      # rust action deps
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2

      - name: install hurl
        run: |
          cargo install hurl
#          curl --location --remote-name https://github.com/Orange-OpenSource/hurl/releases/download/2.0.1/hurl_2.0.1_amd64.deb
#          sudo apt-get update && sudo apt-get install -y ./hurl_2.0.1_amd64.deb

      - name: Cargo Target Cache
        uses: actions/cache@v1
        with:
          path: target
          key: ${{ runner.os }}-cargo-target-${{ hashFiles('**/Cargo.toml') }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-target-${{ hashFiles('**/Cargo.toml') }}
            ${{ runner.os }}-cargo-target

      - name: build beerus
        run: cargo build -p beerus-cli --release

      - name: start beerus RPC on MAINNET
        env:
          BEERUS_VERSION: "ci"
          NETWORK: "mainnet"
          ETH_EXECUTION_RPC: ${{ secrets.ETH_EXECUTION_RPC }}
          STARKNET_RPC: ${{ secrets.STARKNET_RPC }}
        run: ./target/release/beerus &

      - name: run integration test
        run: bash ./scripts/integration-test.sh

      - name: stop RPC
        run: kill $(lsof -t -i:3030)

      - name: start beerus RPC on TESTNET
        env:
          BEERUS_VERSION: "ci"
          NETWORK: "goerli"
          ETH_EXECUTION_RPC: ${{ secrets.ETH_EXECUTION_RPC_GOERLI }}
          STARKNET_RPC: ${{ secrets.STARKNET_RPC_GOERLI }}
        run: ./target/release/beerus &

      - name: run integration test
        run: bash ./scripts/integration-test.sh
